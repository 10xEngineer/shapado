.field
  = form.label t('shared.name')
  = form.text_field :name

.field
  = form.label t('shared.description')
  = form.text_area :description

.field
  .checkbox
    = form.label "Fluid layout"
    = form.check_box :fluid
    %small This let your app to take the full with, usefull when you are in a big screen or small
  .clear

%h2 Colors and Backgrounds

%fieldset.theme_colors
  .field
    = form.label I18n.t('themes.show.bg_color')
    = form.text_field :bg_color, :type => "color"
    %small  Define plane color as background, be sure about contrast with your app.  

  .field
    -if !@theme.new? && @theme.has_bg_image?
      = image_tag("/_files/themes/bg_image/#{@theme.group_id}/#{@theme.id}")
      =link_to t("scaffold.destroy"), remove_bg_image_theme_path(@theme)
    = form.label I18n.t('themes.show.bg_image')
    = form.file_field :bg_image
    %small  You can upload an image as background. Max 800K. GIF, JPG, PNG.

  .field
    = form.label "App main color"
    = form.text_field :brand_color, :type => "color"
    %small This color will be the must important from your brand, pick well

  .field
    = form.label "Modules colors"
    = form.text_field :view_bg_color, :type => "color"
    %small Be sure this color will work great with your background.

  .field
    = form.label "Text color"
    = form.text_field :fg_color, :type => "color"
    %small Be sure you can read well your texts, getting good contrast with backgrounds.

.field
  = form.label :custom_css
  = form.text_area :custom_css
  %small You can use normal CSS and SCSS as custum styles sheets

- if current_group.has_custom_js
  .field
    = form.label :javascript
    - if @theme.has_js
      = form.text_area :javascript, :value => @theme.javascript.get.read
    - else
      = form.text_area :javascript, :value => ''
      
.form-options
  .buttons
    = form.submit :value => "Update theme" , :class => "save"

