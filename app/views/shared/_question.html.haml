.question
  %span.right
    .item.count_answers
      %span.counter
        &= question.answers_count
      %br
      = t(:answers, :scope => "activerecord.attributes.question")
    .item.count_votes
      %span.counter
        &= question.votes_count
      %br
      = t(:votes, :scope => "activerecord.attributes.question")
    .item.count_views
      %span.counter
        &= question.views_count
      %br
      = t(:views, :scope => "activerecord.attributes.question")
  %span
    %h4
      = link_to h(question.title), question_path(question)
    %span
      &= truncate(question.body, :length => 60)
  .clear
    .tags-list
      -question.tags.each do |tag|
        %span.tag
          = link_to h(tag), questions_path(:tags => tag)
    .right
      = t(:asked_by, :scope => "activerecord.attributes.question")
      = link_to h(question.user.login), user_path(question.user)
      %b
        = time_ago_in_words(question.created_at)
    -if logged_in? && current_user.can_modify?(question)
      .buttons
        = link_to I18n.t('scaffold.edit'), edit_question_path(question), :class => "button"
        = link_to I18n.t('scaffold.destroy'), question, :confirm => I18n.t("scaffold.sure", :model => "question"), :method => :delete, :class => "button cancel"
  .clear
