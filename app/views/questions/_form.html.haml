= f.error_messages
.group
  = f.label :title, t(:title, :scope => "activerecord.attributes.question"), :class => "label"
  = f.text_field :title, :class => "text_field"
  .description
    = current_group.question_prompt

.group
  = f.label :tags, t(:tags, :scope => "activerecord.attributes.question"), :class => "label"
  = f.text_field :tags, :value => @question.tags.join(", "), :class => "text_field autocomplete_for_tags"
  .description
    = t(".tags_tip")

.group
  %label.label#rqlabel
    =t(".related_questions", :default => :"questions.show.related_questions" )
  %ul.items#related_questions

.group
  = f.label :body, t(:body, :scope => "activerecord.attributes.question"), :class => "label"
  = f.text_area :body, :class => "text_area", :id => "markdown_editor"

  #markdown_preview.markdown
    =markdown(@question.body)

-if current_group.language.nil?
  .group
    = f.label :language, t(:language, :scope => "activerecord.attributes.question"), :class => "label"
    -lang = @question.new? ? current_user.main_language : @question.language
    = f.select :language, languages_options(current_user.preferred_languages), {:selected => lang}, :class => "select"
    .description
      = t(".language_tip")
-else
  = f.hidden_field :language, :value => current_group.language

