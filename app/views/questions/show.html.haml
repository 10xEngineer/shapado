-content_for :subtabs do
  .navtitle
    &= @question.title

#question-vote-col
  -if current_user && @question.watch_for?(current_user)
    = link_to image_tag("layer-visible-on.png"), unwatch_question_path(current_languages, @question)
  -else
    = link_to image_tag("layer-visible-off.png"), watch_question_path(current_languages, @question), :title => t(".watch_tooltip")

  =vote_box(@question, question_path(current_languages,@question))

  -if logged_in? && favorite = current_user.favorite(@question)
    -form_tag question_favorite_path(current_languages, @question.id, favorite.id), :method => :delete, :id => "favorite_form" do |f|
      = image_submit_tag("favorites.png")
  -else
    - form_tag question_favorites_path(current_languages, @question.id), :id => "favorite_form" do
      = image_submit_tag("unfavorites.png")
  .favorites_count
    &= @question.favorites_count

#question-body-col.markdown
  #body
    = find_and_preserve(shapado_auto_link(markdown(@question.body)))

  .tag-list
    -@question.tags.each do |tag|
      %span.tag
        = link_to h(tag), questions_path(:language => current_languages, :tags => tag)

  .user_info
    .gravatar
      = gravatar(@question.user.email.to_s, :size => 32)
    .user_data
      %span.asked_by
        = t('activerecord.attributes.question.asked_by')
      = link_to h(@question.user.login), user_path(@question.user)
      %span.time_ago
        = t("time.ago", :time => time_ago_in_words(@question.created_at))
      = t("global.from", :site => @question.user.country_name)
      = country_flag(@question.user.country_code, @question.user.country_name)
    .clear
  .controls
    .actions
      =link_to t(".flag"), flag_question_path(current_languages, @question), :class => "flag-link", :rel => 'nofollow'
      -if logged_in?
        -if current_user.can_edit_others_posts_on?(@question.group) || current_user.can_modify?(@question)
          = link_to t('scaffold.edit'), edit_question_path(current_languages, @question), :class => "button"
        =link_to t("comments.shared.add_comment"), "#", :id => "add_comment_link", :rel => 'nofollow'
        -if current_user.mod_of?(@question.group)
          %br
          = link_to "ban", ban_path(:question_ids => [@question.id]), :class => "button", :confirm => "are you sure?"
    .forms
      -flag = Flag.new
      - flag.flaggeable = @question
      = render :partial => "flags/form", :locals => {:flag => flag, :source => question_path(current_languages, @question) }

      -form_tag comments_path, :class => "form", :id => "add_comment_form" do
        -@comment = Comment.new
        = render :partial => "comments/form", :locals => {:source => question_path(current_languages, @question), :commentable => @question}
        = submit_tag t("comments.shared.comment_submit")
  .comments
    -@question.comments.each do |comment|
      .comment
        %strong
          = t("time.ago", :time => time_ago_in_words(comment.created_at))
        =link_to comment.user.login, user_path(comment.user)
        said:
        .markdown
          = shapado_auto_link(markdown(comment.body))
.clear


%a{:name=>"answers"}

#answers
  .secondary-navigation{:class => @active_subtab.to_s}
    .navtitle
      = t(".answers_title", :count => @answers.total_entries + (@question.answered ? 1 : 0))

    %ul
      %li.newest
        = link_to t("questions.index.newest"), question_path(current_languages, @question, :sort=>"newest", :anchor => "answers")
      %li.votes
        = link_to t("questions.index.votes"), question_path(current_languages, @question, :sort=>"votes", :anchor => "answers")
      %li.oldest
        = link_to t("questions.index.oldest"), question_path(current_languages, @question, :sort=>"oldest", :anchor => "answers")
    .clear
  .block
    -if @question.answered
      -solution = @question.answer
      =render :partial=> "answer", :locals=> {:question => @question, :answer => solution, :comment => @answer} unless solution.nil?
    -@answers.each do |answer|
      =render :partial=> "answer", :locals=> {:question => @question, :answer => answer, :comment => @answer}
    =will_paginate(@answers)

%a{:name=>"to_answer"}
-form_for @answer, :url => question_answers_path(current_languages, @question.id), :html => {:class => "form mainAnswerForm"} do |f|
  = render :partial => "answers/form", :locals => {:f => f, :markdown => true}
  .group.navform
    = submit_tag t('answers.form.submit'), :class => "button"

-content_for :sidebar do
  .block
    %h3
      = h(t('.tags', :default => [:"layouts.application.tags", :"activerecord.attributes.user.tags", "tags"]).to_s.capitalize)
    = render :partial => "shared/tag_list", :object => @tag_cloud
    .clear

  .block.stats
    -if @question.group_id != current_group.id
      = t(".asked_on")
      = @question.group.name

    .entry
      .text.asked
        = t('activerecord.attributes.question.created_at')
      .data
        = t("time.ago", :time => time_ago_in_words(@question.created_at))
    .entry
      .text.viewed
        = t('.viewed')
      .data
        = t('number.x_time', :count => number_with_delimiter(@question.views_count))
    .entry
      .text.last_activity
        = t(".last_activity")
      .data
        = t("time.ago", :time => time_ago_in_words(@question.activity_at))
  -if AppConfig.enable_sharing
    .block
      %h3
        = t(".share")
      %ul.navigation.content
        %li
          = render :partial => "twitter"
        %li
          = render :partial => "identica"
        %li
          = render :partial => "facebook"
