-title = h(question.title)
-owner = question.user

%li.item{:class => class_for_question(question)}
  / Question Stats
  .stats
    .box.votes
      .counter{:class => class_for_number(question.votes_average) }
        =format_number(question.votes_average)
      .text
        =t(:votes, :scope => "activerecord.attributes.question")
    .box.answers{:class => question.answered ? "answered" : "" }
      .counter
        =format_number(question.answers_count)
      .text
        =t(:answers, :scope => "activerecord.attributes.question")
    .box.views
      .counter{:class => class_for_number(question.views_count) }
        =format_number(question.views_count)
      .text
        =t(:views, :scope => "activerecord.attributes.question")
  / Question Summary
  .summary
    %h3
      -if logged_in? && (vote = current_user.vote_on(question))
        -if vote.value < 0
          = image_tag "edit-delete.png"
        -else
          = image_tag "dialog-ok-apply.png"
      -else
        -form_tag votes_path, :class => "vote-up-form" do
          = hidden_field_tag "voteable_type", question.class.name
          = hidden_field_tag "voteable_id", question.id
          = hidden_field_tag "source", questions_path(:language => current_languages)
          = image_submit_tag("dialog-ok.png", :name=>"vote_up", :value=>"1", :title => t("votes.control.to_vote_up"))

      = link_to title, question_path(current_languages, question), :title => truncate(h(question.body), :length => 200)
    .tag-list
      -question.tags.each do |tag|
        %span.tag
          = link_to h(tag), questions_path(current_languages, :tags => tag)
    .owner-data
      = link_to h(owner.login), user_path(owner)
      %span.reputation
        ==(#{owner.reputation_on(question.group)})
      %strong
        = t("time.ago", :time => time_ago_in_words(question.created_at))
  .clear
