
-solution = question.answered && question.answer_id == answer.id

.answer{:class => solution ? "solution" : ""}
  %a{:name=>"#{answer.id}"}
  #vote-col
    =vote_box(answer, question_path(current_languages, question))
    -if solution
      =image_tag "correct.png", :width => 48, :alt => "correct_answer", :title => "chose as answer by the author"
  #body-col
    .markdown
      =find_and_preserve(shapado_auto_link(markdown(answer.body)))
    .user_data
      .time_ago
        = t('activerecord.attributes.answer.created_at')
        %strong
          = t("time.ago", :time => time_ago_in_words(answer.created_at))
      .avatar
        = gravatar(answer.user.email.to_s, :size => 32)
      .user
        = link_to h(answer.user.login), user_path(answer.user)
        == (#{answer.user.reputation_on(current_group)})
        = t("global.from", :site => answer.user.country_name)
        = country_flag(answer.user.country_code, answer.user.country_name)
    .controls
      .actions
        -if logged_in?
          -if current_user.can_edit_others_posts_on?(answer.group) || current_user.can_modify?(answer)
            = link_to t("scaffold.edit"), edit_question_answer_path(current_languages, @question, answer)
          -if current_user.can_modify?(answer)
            = link_to t("scaffold.destroy"), question_answer_path(current_languages, @question, answer), :confirm => t("scaffold.sure", :model => "answer"), :method => :delete, :class =>"cancel"
          = link_to t("comments.shared.add_comment"), "#", :class => "addNestedAnswer"
          -if current_user != answer.user
            = link_to t(".flag"), flag_question_answer_path(current_languages,@question,answer), :class => "flag-link"
          -if current_user.can_modify?(@question)
            -unless @question.answered
              = link_to t(".pick_answer"), solve_question_path(current_languages, @question, :answer_id => answer)
            -if solution
              = link_to t(".unset_answer"),  unsolve_question_path(current_languages, @question)
      .clear
      .forms
        -form_for comment, :url => question_answers_path(current_languages, @question.id, comment.id), :html => {:class => "form nestedAnswerForm"} do |f|
          = render :partial => "answers/form", :locals => {:f => f, :parent => answer}
          .group.navform
            = submit_tag t('.comment_submit', :default => :"answers.form.comment_submit"), :class => "button"

        -if current_user != answer.user
          -flag = Flag.new
          -flag.flaggeable = answer
          = render :partial => "flags/form", :locals => {:flag => flag, :source => question_path(current_languages,@question) }
    .clear

    / Nested Answers
    .children.comments
      -answer.children.each do |comment|
        .comment
          %strong
            = t("time.ago", :time => time_ago_in_words(comment.created_at))
          =link_to comment.user.login, user_path(comment.user)
          said:
          .markdown
            = shapado_auto_link(markdown(comment.body))

  .clear
