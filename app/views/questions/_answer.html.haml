
-solution = solution || false

.answer{:class => solution ? "solution" : ""}
  .answer_title
    .gravatar.left{:style => "padding: 2px"}
      = gravatar(question.user.email, :size => 14)
    = link_to h(answer.user.login), user_path(answer.user)
    = time_ago_in_words(answer.created_at)
    .clear
  .answer_body
    = vote_box(answer, question_path(question))
    %span.markdown
      = markdown(answer.body)
    .clear
    %hr
    / Nested Answers
    .children
      -answer.children.each do |child|
        .child{:style => "padding-top: 10px"}
          =link_to child.user.login, user_path(child.user)
          =time_ago_in_words(child.created_at)
          %br

          = h(child.body)
          %hr
      .right
        = link_to "Add Comment...", "#", :class => "addNestedAnswer"
      .clear
      -form_for @answer, :html => {:class => "form nestedAnswerForm"} do |f|
        = render :partial => "answers/form", :locals => {:f => f, :parent => answer}
        = submit_tag I18n.t('views.answers.form.submit')
    / Buttons
    -if logged_in?
      .buttons
        -if current_user.can_modify?(answer)
          = link_to I18n.t("scaffold.edit"), edit_answer_path(answer), :class =>"button"
          = link_to I18n.t("scaffold.destroy"), answer, :confirm => I18n.t("scaffold.sure", :model => "answer"), :method => :delete, :class =>"button cancel"
        -if current_user.can_modify?(@question)
          -unless @question.answered
            = link_to t("pick_answer", :scope => "views.questions.show"), solve_question_path(@question, :answer_id => answer), :class =>"button"
          -if solution
            = link_to t("unset_answer", :scope => "views.questions.show"),  unsolve_question_path(@question), :class =>"button"
  .clear
