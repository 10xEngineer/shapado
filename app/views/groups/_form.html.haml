-require_js "modules/themes"

.group
  = form.label :name, t('name', :scope => "activerecord.attributes.group"), :class => "label"
  = form.text_field :name, :class => "text_field"

.group
  = form.label :subdomain, "URL", :class => "label"
  %div
    %span.description
      ="#{request.protocol}"
    = form.text_field :subdomain, :class=>"text_field", :style => "width: 20%"
    %span.description
      = ".#{request.domain}"

-if current_user.admin?
  .group
    = form.label :domain,  t('domain', :scope => "activerecord.attributes.group"), :class => "label"
    %span.description
      =request.protocol
    = form.text_field :domain, :class=> "text_field", :style => "width: 20%"
  .group
    = form.check_box :isolate, :class => "checkbox"
    = form.label :isolate, "isolate the group form other groups", :class => "radio"
  .group
    = form.check_box :private, :class => "checkbox"
    = form.label :private, "Only the group's members will be able to access this group", :class => "radio"
  .group
    = form.check_box :has_custom_html, :class => "checkbox"
    = form.label :has_custom_html, "Allow custom html", :class => "radio"
  .group
    = form.check_box :has_custom_js, :class => "checkbox"
    = form.label :has_custom_js, "Allow custom javascript", :class => "radio"
  .group
    = form.check_box :has_custom_analytics, :class => "checkbox"
    = form.label :private, "Allow Custom Analytics", :class => "radio"
    .description
      The group will be able to use its own tracking code

- if @group.has_custom_analytics
  .group
    = form.label :analytics_engine, "Analytics Engine", :class => "label"
    =  select("group", "analytics_vendor", [['Google Analytics', 'googlean']])

  .group
    = form.label :analytics_id, "Website Analytics ID", :class => "label"
    = form.text_field :analytics_id, :class=> "text_field"

.group
  = form.label :description,  t('description', :scope => "activerecord.attributes.group"), :class => "label"
  = form.text_area :description, :class => "text_area", :id => "markdown_editor"
  .description
    = t('.description_legend')
  %label.label
    = t("global.preview")
  #markdown_preview.markdown
    =markdown(@group.description)


.group
  = form.label :legend, t('legend', :scope => "activerecord.attributes.group"), :class => "label"
  = form.text_field :legend, :class => "text_field"
  .description
    = t('.legend_legend')

.group
  = form.label :default_tags, t('default_tags', :scope => "activerecord.attributes.group"), :class => "label"
  = form.text_field :default_tags, :value => @group.default_tags.join(", "), :class => "text_field"
  .description
    = t('.default_tags_legend')

.group
  = form.label :language, t(:language, :scope => "activerecord.attributes.group"), :class => "label"
  -AVAILABLE_LANGUAGES.each do |lang|
    = form.radio_button :language, lang, :checked => @group.language == lang
    = language_desc(lang)
  = form.radio_button :language, "none", :checked => @group.language.nil?
  = t(".any_language")

.group
  = form.label :logo, t('logo', :scope => "activerecord.attributes.group"), :class => "label"
  -unless @group.new?
    = image_tag(logo_group_path(@group))
  %br
  = form.file_field :logo
  .description
    = t('.logo_legend')

.group
  = form.label :custom_favicon, "Favicon", :class => "label"
  -if @group.has_custom_favicon?
    = image_tag(favicon_group_path(@group))
  -else
    = image_tag("/favicon.ico")
  = form.file_field :custom_favicon

.group
  = form.label :theme, t(:theme, :scope => "activerecord.attributes.group", :default => "Theme" ), :class => "label"
  = form.select :theme, AVAILABLE_THEMES, {}, :class => "choose_theme"

.group
  = form.label :custom_css, "Custom css", :class => "label"
  -custom_css = ""
  -@group.has_custom_css? ? custom_css = @group.custom_css.read : custom_css = ""
  = form.text_area :custom_css, :value => custom_css, :class => "text_area"

