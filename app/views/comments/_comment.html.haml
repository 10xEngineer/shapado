-if !local_assigns[:mini]
  %article.comment
    %h4
      = gravatar(comment.user.email.to_s, :size => 20)
      = link_to h(comment.user.login), user_path(comment.user), :class => "clear"
      %b
        = shapado_auto_link(markdown(comment.body), :link_users => true)
        = t("time.ago", :time => time_ago_in_words(comment.created_at))
        = t("global.from", :site => comment.user.country_name)
        = country_flag(comment.user.country_code, comment.user.country_name)
    %ul.comment-actions
      - if logged_in? && current_user != comment.user
        %li
          = link_to t("comments.shared.reply"), "#", :class => "addNestedAnswer reply", 'data-author' => comment.user.login
      -if logged_in? && (current_user.can_modify?(comment) || current_user.mod_of?(current_group))
        %li
          = link_to t("scaffold.edit"), edit_comment_path(comment, :source => source)
      -if logged_in? && comment.can_be_deleted_by?(current_user)
        %li
          = link_to t("scaffold.destroy"), comment_path(comment, :source => source), :confirm => t("scaffold.sure", :model => "comment"), :method => :delete

-else
  %article.comment
    %h4
      = t("time.ago", :time => time_ago_in_words(comment.created_at))
      =link_to comment.user.login, user_path(comment.user)
      == #{t("comments.shared.said")}:
    %ul.toolbar
      %li.drop
        %p
          -if comment.votes_average > 0
            &= comment.votes_average
          -else
            -if logged_in? && current_user.can_vote_up_on?(current_group) && current_user != comment.user

        -if logged_in?
          -url = ""
          -if comment.commentable.is_a?(Answer)
            -url = question_answer_comment_votes_path(comment.commentable.question, comment.commentable,comment)
          -elsif comment.commentable.is_a?(Question)
            -url = question_comment_votes_path(comment.commentable, comment)
          -form_tag url, :class => "vote-up-comment-form" do
            .fields
              = hidden_field_tag "source", request.path, :id =>  "source_#{comment.id}"
              -if vote = current_user.vote_on(comment)
                = image_submit_tag("dialog-ok-apply.png", :name=>"vote_up", :value=>"1", :title => t("votes.control.to_vote_up"), :class => "comment-voteup-button")
              -else
                = image_submit_tag("dialog-ok.png", :name=>"vote_up", :value=>"1", :title => t("votes.control.to_vote_up"), :class => "comment-voteup-button")
    .comment-content.markdown
      = shapado_auto_link(markdown(comment.body), :link_users => true)

    .controls
      .actions
        - if logged_in? && current_user != comment.user
          = link_to t("comments.shared.reply"), "#", :class => "addNestedAnswer reply", 'data-author' => comment.user.login
        -if logged_in? && (current_user.can_modify?(comment) || current_user.mod_of?(current_group))
          -case comment.commentable
            -when Question
              = link_to t("scaffold.edit"), edit_question_comment_path(:question_id => comment.commentable.id, :id => comment.id, :source => source), :class => "edit_comment"
            -when Answer
              = link_to t("scaffold.edit"), edit_question_answer_comment_path(:question_id => comment.commentable.question, :answer_id => comment.commentable, :id => comment.id, :source => source), :class => "edit_comment"
        -if logged_in? && comment.can_be_deleted_by?(current_user)
          -case comment.commentable
            -when Question
              = link_to t("scaffold.destroy"), question_comment_path(:question_id =>  comment.commentable.id, :id => comment.id, :source => source), :confirm => t("scaffold.sure", :model => "comment"), :method => :delete
            -when Answer
              = link_to t("scaffold.destroy"), question_answer_comment_path(:question_id =>  comment.commentable.question.id, :answer_id => comment.commentable.id, :id => comment.id, :source => source), :confirm => t("scaffold.sure", :model => "comment"), :method => :delete
    .clear

